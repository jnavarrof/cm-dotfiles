function calc {
  awk "BEGIN {print $*}"
}
function s2c {
  tr ' ' ','
}
function s2n {
  tr ' ' '\n'
}
function c2s {
  tr ',' ' '
}
function c2n {
  tr ',' '\n'
}
function n2c {
  tr '\n' ','
}
function n2s {
  tr '\n' ' '
}
function mm {
  if [ "$1" == "" ]; then return; fi
  jq -r ".[] | select(.name == \"$1\") | del(.ssh, .ssh_rsa_pub)" /var/local/meraki/inventory/machines_map.json
}
function mr {
  if [ "$1" == "" ]; then return; fi
  jq -cr ".[] | select(.roles_flat | any(test(\"$1\"))) | {name: .name, roles: .roles_flat}" /var/local/meraki/inventory/machines_map.json
}
function n {
  if [ "$1" == "" ]; then return; fi
  SHARD_ID=$1
  CLUSTER=${2:-meraki.com}
  jq -r ".[] | select(.role_info.dashboard.id == $SHARD_ID and .cluster == \"$CLUSTER\") | del(.ssh, .ssh_rsa_pub)" /var/local/meraki/inventory/machines_map.json
}
function ecn {
  (cd ~/co/manage/ && bundle exec script/elasticsearch/cluster_nodes.rb --cluster ${1})
}
function inv {
  (cd ~/co/manage/extra/ansible && inventories/${1}.sh | jq . | less)
}
function fp {
  branch=`branch`
  git format-patch -1 --stdout > ~/patches/${branch}
  echo ${branch}
}
function p {
  branch=`branch`
  fp && scp ~/patches/${branch} ${1}:~
}
function ar {
  (cd extra/ansible && sudo bin/ansible-role ${1} -v -D)
}
function clrq {
  (cd ~/co/manage/ && be script/elasticsearch/cancel_long_running_tasks.rb --action-filter "indices:data/read/search" --target-cluster ${1})
}
function lrq {
  clrq "${1} --list"
}
function fixssh {
  eval $(tmux show-env -s |grep '^SSH_')
}
function github_stars {
  curl -s "https://api.github.com/repos/${1}" | jq '.["stargazers_count"]'
}